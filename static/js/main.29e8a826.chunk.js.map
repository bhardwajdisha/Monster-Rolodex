{"version":3,"sources":["component/card/card.jsx","component/card-list/card-list.jsx","component/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleSearch","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filterMonster","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAEaA,EAAO,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAClB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAQG,GAAlC,0BAA8DC,IAAI,YAC1E,mCAAMJ,EAAQK,QACd,4BAAIL,EAAQM,YCHXC,EAAW,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACtB,OACI,qBAAKP,UAAU,YAAf,SAEQO,EAASC,KAAI,SAACT,GAAD,OACT,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,UCP1BO,G,MAAY,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAYC,EAAkB,EAAlBA,aACnC,OACI,8BACI,uBACIX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,QCgCXG,G,wDApCb,aAAc,IAAD,8BACX,gBAaFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAZpC,EAAKC,MAAM,CACTb,SAAS,GACTU,YAAY,IALH,E,qDASb,WAAoB,IAAD,OACfI,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACT,SAAUkB,S,oBAK1C,WACE,MAA6BC,KAAKN,MAA3Bb,EAAP,EAAOA,SAASU,EAAhB,EAAgBA,YACVU,EAAgBpB,EAASqB,QAAO,SAAA7B,GACnC,OAAOA,EAAQK,KAAKyB,cAAcC,SAASb,EAAYc,wBAE1D,OACE,sBAAK/B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACIW,aAAce,KAAKf,aACnBD,YAAY,mBAEf,cAAC,EAAD,CAAUH,SAAUoB,W,GA9BXK,cCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.29e8a826.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.css'\r\nexport const Card = ({monster}) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img src={`https://robohash.org/${monster.id}?set=set2&size=180x180`} alt=\"monster\"/>\r\n            <h2> {monster.name}</h2>\r\n            <p>{monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport './card-list.css'\r\nimport {Card} from '../card/card'\r\n\r\nexport const CardList = ({monsters}) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {\r\n                monsters.map((monster)=> (\r\n                    <Card key={monster.id} monster={monster}/>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport './search-box.css'\r\nexport const SearchBox = ({placeholder,handleSearch}) => {\r\n    return (\r\n        <div>\r\n            <input \r\n                className=\"search\"\r\n                type=\"search\"\r\n                placeholder={placeholder}\r\n                onChange={handleSearch}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React , {Component} from 'react';\nimport {CardList} from './component/card-list/card-list';\nimport {SearchBox} from './component/search-box/search-box';\nimport './App.css';\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state={\n      monsters:[],\n      searchField:\"\",\n    }\n  }\n\n  componentDidMount(){\n      fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res=>res.json())\n      .then(users=>this.setState({monsters: users }));\n  }\n  handleSearch = e =>{\n    this.setState({searchField:e.target.value})\n  }\n  render(){\n    const {monsters,searchField}=this.state;\n    const filterMonster = monsters.filter(monster=>{\n       return monster.name.toLowerCase().includes(searchField.toLocaleLowerCase());\n    })\n    return(\n      <div className=\"App\">\n        <h1>MONSTER ROLODEX</h1>\n        <SearchBox \n            handleSearch={this.handleSearch}\n            placeholder='Search Monster'\n        />\n         <CardList monsters={filterMonster} />\n      </div>\n    )\n\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}